/*************************************************
Initially Generated by SSoT.me - 2017
    EJ Alexandra - An odxml42 Tool
    This file WILL NOT be overwritten once changes are made.
*************************************************/
using EffortlessAPI.SSio.SassyMQ;
using EffortlessAPI.SSio.ssio;
using Newtonsoft.Json;
using System;
using System.ComponentModel;
                        
namespace SmartSubs.io.Lib.DataClasses
{                   
    
    public partial class ProductLicense 
    {
        public ProductLicense()
        {
            this.InitPoco();
        }

        public override String ToString()
        {
            return String.Format("ProductLicense: {0}", this.Name);
        }

        public static EffortlessAPI.SSio.SassyMQ.StandardPayload IssueSSioLicense(string licensorsSSioJWT, string licenseBundleSKU, string emailAddress)
        {
            EffortlessAPI.SSio.SassyMQ.StandardPayload response;
            if (String.IsNullOrEmpty(licenseBundleSKU)) throw new Exception("Name of payload.LicenseBundle is required");
            var ssioUser = SMQSSioUser.FromAccessToken(licensorsSSioJWT);

            var ssioPayload = ssioUser.CreatePayload();
            ssioPayload.EmailAddress = emailAddress;

            // ej's access token
            ssioPayload.BrandLicense = new BrandLicense()
            {
                Name = licenseBundleSKU
            };

            var webClient = new System.Net.WebClient();
            var payloadJson = JsonConvert.SerializeObject(ssioPayload);
            try
            {
                var resultStr = webClient.UploadString("https://fnp6pmuu87.execute-api.us-east-2.amazonaws.com/default/abs_IssueLicense", "POST", payloadJson);
                response = JsonConvert.DeserializeObject<EffortlessAPI.SSio.SassyMQ.StandardPayload>(resultStr);
            }
            catch (System.Net.WebException wex)
            {
                using (var sr = new System.IO.StreamReader(wex.Response.GetResponseStream()))
                {
                    var message = sr.ReadToEnd();
                    throw new Exception(message);
                }
            }

            return response;
        }
    }
}